-- 1. Create table DEPT with the following structure:
create table DEPT(
DEPTNO int(2),
DNAME varchar(15),
LOC varchar(10));

insert into DEPT values
(10, 'ACCOUNTING', 'NEW YORK'),
(20, 'RESEARCH', 'DALLAS'),
(30, 'SALES', 'CHICAGO'),
(40, 'OPERATIONS', 'BOSTON');

Output:
10	ACCOUNTING	NEW YORK
20	RESEARCH	DALLAS
30	SALES		CHICAGO
40	OPERATIONS	BOSTON

=================================================================

-- 2. Create table EMP with the following structure:-
create table EMP(
EMPNO int(4),
ENAME varchar(10),
JOB varchar(9),
HIREDATE date,
SAL float(7,2),
COMM float(7,2),
DEPTNO int(2));

-- Insert the following rows into the EMP table:-
insert into EMP values
(7839, 'KING', 'MANAGER', '1991-11-17', 5000, NULL, 10),
(7698, 'BLAKE', 'CLERK', '1981-05-01', 2850, NULL, 30),
(7782, 'CLARK', 'MANAGER', '1981-06-09', 2450, NULL, 10),
(7566, 'JONES', 'CLERK', '1981-04-02', 2975, NULL, 20),
(7654, 'MARTIN', 'SALESMAN', '1981-09-28', 1250, 1400, 30),
(7499, 'ALLEN', 'SALESMAN', '1981-02-20', 1600, 300, 30);


Output:
7839	KING	MANAGER		1991-11-17	5000.00		10
7698	BLAKE	CLERK		1981-05-01	2850.00		30
7782	CLARK	MANAGER		1981-06-09	2450.00		10
7566	JONES	CLERK		1981-04-02	2975.00		20
7654	MARTIN	SALESMAN	1981-09-28	1250.00	1400.00	30
7499	ALLEN	SALESMAN	1981-02-20	1600.00	300.00	30
==========================================================================

-- 3. Display all the employees where SAL between 2500 and 5000 (inclusive of both).
select * from emp where sal between 2500 and 5000;

Output:
7839	KING	MANAGER	1991-11-17	5000.00		10
7698	BLAKE	CLERK	1981-05-01	2850.00		30
7566	JONES	CLERK	1981-04-02	2975.00		20

===========================================================================

-- 4. Display all the ENAMEs in descending order of ENAME.
select ename from emp order by ename desc;

Output:
MARTIN
KING
JONES
CLARK
BLAKE
ALLEN

=========================================================================

-- 5. Display all the JOBs in lowercase.
select lower(job) from emp;

Output:
manager
clerk
manager
clerk
salesman
salesman
=======================================================================

-- 6. Display the ENAMEs and the lengths of the ENAMEs.
select ename, length(ename) from emp;

Output:
KING	4
BLAKE	5
CLARK	5
JONES	5
MARTIN	6
ALLEN	5

=======================================================================

-- 7. Display the DEPTNO and the count of employees who belong to that DEPTNO .
select deptno, count(*) from emp group by deptno;

Output:
10	2
20	1
30	3

=============================================================================

-- 8. Display the DNAMEs and the ENAMEs who belong to that DNAME.
select dname, ename from emp, dept where emp.deptno = dept.deptno;

Output:
ACCOUNTING	KING
SALES		BLAKE
ACCOUNTING	CLARK
RESEARCH	JONES
SALES		MARTIN
SALES		ALLEN

=============================================================================

-- 9. Display the position at which the string ‘AR’ occurs in the ename
select instr(ename, 'AR') from emp;

Output:
0
0
3
0
2
0

=================================================================================

-- 10. Display the HRA for each employee given that HRA is 20% of SAL.
select ename, sal*0.2 "HRA" from emp;

Output:
KING	1000.00
BLAKE	570.00
CLARK	490.00
JONES	595.00
MARTIN	250.00
ALLEN	320.00
=====================================================================================



Section II

1.

create table TEMPP(
s varchar(15),
output varchar(50));
delimiter //
create procedure PROC1(string1 varchar(20), string2 varchar(20))
begin
	declare x int;
	set x = locate(string1, string2);
    if x>0 then
		insert into tempp values(string1, 'FOUND in String 2');
	else
		insert into tempp values(string1, 'NOT FOUND in String 2');
	end if;
	select * from tempp;
end; //
delimiter ;
drop procedure PROC1;
call PROC1('DAC', 'CDAC');


Output:
DAC	FOUND in String 2


============================================================================================

2. 
create table outp(
valid char(6));


delimiter //
create function FUNC1(a int, b int, c int)
returns boolean
deterministic
begin 
	if (a+b) > c and (b+c) > a and (c+a) > b then
		return true;
	else 
		return true;
	end if;
end; //
delimiter ;
drop function FUNC1;
delimiter //
create procedure abc(x int, y int, z int)
begin
declare k boolean;
set k = FUNC1(x,y,z);
if k then 
	insert into outp values ('TRUE');
else
	insert into outp values ('FALSE');
end if;
select * from outp;
end; //
delimiter ;
drop procedure abc;
delete from outp;
call abc(10, 20, 20);

Output: TRUE